name: FULL ACTIONS-SONARQUBE-TEST # Nombre del workflow

on: # Eventos que activan el workflow
  push:
    branches: # Git push activará el workflow al realizarse en estas ramas
      - full

env: # Variables de entorno
  MY_TOKEN: ${{ secrets.MY_TOKEN }} # Token para main branch
  SONAR_TOKEN: ${{ secrets.SECSEN_TOKEN }} # Token para sonar
  JAVASRC_DIR: src/com/example/sqlinjectiontest/Main.java # Directorio del fichero Main.java
  JAVATESTS_DIR: tests/com/example/sqlinjectiontest/MainTest.java
  PYTHON_DIR: python # Directorio de los ficheros python
  RESULTS_DIR: results # Directorio de los resultados

jobs: # Conjunto de las tareas
  sonar_analysis: # Nombre de la tarea (job)
    runs-on: ubuntu-latest # Virtualiza en Ubuntu

    steps: # Pasos de la tarea
    - name: 📥 Clonar repositorio
      uses: actions/checkout@v4

    # ------------ JAVA BUILD & TEST ------------
    - name: ☕ JAVA - Congigurando JDK 17... # Instala y configura Java - ZULU
      uses: actions/setup-java@v2
      with:
        java-version: '17' 
        distribution: 'zulu'

    - name: ☕ JAVA - 📦 Instalando Checkstyle para Java...
      run: |
        wget -O checkstyle.jar https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.12.1/checkstyle-10.12.1-all.jar
        wget -O google_checks.xml https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-10.12.1/src/main/resources/google_checks.xml

    - name: ☕ JAVA - 🚀 Ejecutando Checkstyle (Java)...
      run: |
        mkdir -p ${{ env.RESULTS_DIR }}/java
        java -jar checkstyle.jar -c google_checks.xml ${{ env.JAVASRC_DIR }} | tee ${{ env.RESULTS_DIR }}/java/checkstyle-output.txt || true
      continue-on-error: true

    - name: ☕ JAVA - 🛠️ Compilando código Java...
      run: |
        javac ${{ env.JAVASRC_DIR }} -d build
      continue-on-error: true

    - name: ☕ JAVA - 📦 Descargando JUnit... # Instala y configura JUnit
      run: |
        wget -O junit-platform-console-standalone-1.10.0.jar \
        https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar

    - name: ☕ JAVA - 🧪 Ejecutando tests unitarios Java (JUnit 5)...
      run: |
        wget -O junit-platform-console-standalone-1.10.0.jar \
        https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar

        java -jar junit-platform-console-standalone-1.10.0.jar \
          --class-path build:tests:junit-platform-console-standalone-1.10.0.jar \
          --scan-class-path | tee ${{ env.RESULTS_DIR }}/java/junit-results.txt
      continue-on-error: true

    - name: ☕ JAVA - 🚀 Ejecutando código Java...
      run: java -cp build ${{ env.JAVASRC_DIR }} | tee ${{ env.RESULTS_DIR}}/java/java-output.txt || true

    - name: ☕ JAVA - 🧹 Limpiando compilados...
      run: rm -rf build

    # ------------ PYTHON TESTS ------------
    - name: 🐍 PYTHON - Configurando Python... # Instala y configura Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: 🐍 PYTHON - 📦 Instalando las dependencias para Python... # Instala las librerias de Python a usar
      run: |
        pip install pytest flake8 bandit black requests uuid ruff

    - name: 🐍 PYTHON - ✏️ Chequeando estilos (flake8)... # Ejecuta flake8
      run: |
        mkdir -p ${{ env.RESULTS_DIR }}/python
        flake8 python/ | tee ${{ env.RESULTS_DIR }}/python/flake-results.txt
      continue-on-error: true
  
    - name: 🐍 PYTHON - 📊 Chequeando formato (black)... # Ejecuta black
      run: black --check python/ | tee ${{ env.RESULTS_DIR }}/python/black-results.txt
      continue-on-error: true

    - name: 🐍 PYTHON - 🕵🏻‍♂️ Ejecutando análisis de seguridad (bandit)... # Ejecuta bandit en busca de vulnerabilidades
      run: bandit -r python/ -x tests/ -s B101 | tee ${{ env.RESULTS_DIR }}/python/bandit-results.txt # Ignora el assert de python (-x tests/ -s B101)
      continue-on-error: true

    - name: 🐍 PYTHON - 🧪 Ejecutando pytests... # Ejecuta los pytests
      run: |
        pytest -s -v --disable-warnings python/file.py | tee ${{ env.RESULTS_DIR }}/python/pytest_file-results.txt
        pytest -s -v --disable-warnings python/test/pixegami_test.py | tee ${{ env.RESULTS_DIR }}/python/pytest_pixegami-results.txt
      continue-on-error: true

    - name: 🐍 PYTHON - ☑️ Verificando tipos con mypy...
      run: |
        pip install mypy
        mypy ${{ env.PYTHON_DIR }} | tee ${{ env.RESULTS_DIR }}/python/mypy-results.txt
      continue-on-error: true

    # ------------ ARTIFACTS ------------
    - name: 📁 Almanceando resultados... # Almacena los resultados de las pruebas
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: results/

    # ------------ SUMMARY ------------
    - name: 📋 Resumen # Resumen de las tareas de Java y Python
      run: |
        echo "✅ Java and Python tasks completed."
        echo "📄 Outputs stored in 'results/' and uploaded as artifacts."
        echo "🚀 Running SonarQube analysis now..."

    # ------------ SONARQUBE ------------
    - name: 📊SONARQUBE - Instalando Sonar Scanner...
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner-cli-5.0.1.3006-linux.zip
        mv sonar-scanner-5.0.1.3006-linux sonar-scanner
        echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

    - name: 📊SONARQUBE -☑️ Verificando SonarQube...
      run: |
        curl -I http://rndgx-31-4-242-138.a.free.pinggy.link || true

    - name: 📊SONARQUBE -🚀 Ejecutando escaneo de SonarQube...
      run: |
        sonar-scanner \
          -Dsonar.projectKey=VariosTests \
          -Dsonar.host.url=http://rndgx-31-4-242-138.a.free.pinggy.link \
          -Dsonar.token=${{ secrets.MY_TOKEN }} \
          -Dsonar.sources=python,src \
          -Dsonar.python.version=3.x \
          -Dsonar.qualitygate.wait=true \
          -X
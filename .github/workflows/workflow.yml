name: SQL INJECTION TEST # Nombre del workflow

# Eventos de activación
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: # Tareas
  sonar_analysis: # Nombre de la tarea
    runs-on: ubuntu-latest # SO a virtualizar

    steps: # Pasos de la tarea
      - name: Clonando repositorio...
        uses: actions/checkout@v2

      - name: Preparando JDK 17...
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Instalando Sonar Scanner...
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner
          echo "PATH=$PATH:$(pwd)/sonar-scanner/bin" >> $GITHUB_ENV

      - name: Verificar SonarQube...
        run: |
          curl -I http://rnnyj-31-4-242-174.a.free.pinggy.link
        continue-on-error: true

      - name: Analizar código en SonarQube...
        env:
          MY_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=SQLInjectionTest \
            -Dsonar.host.url=http://rnnyj-31-4-242-174.a.free.pinggy.link \
            -Dsonar.token=$MY_TOKEN \
            -Dsonar.sources=src/com/example/sqlinjectiontest/Main.java \
            -Dsonar.qualitygate.wait=true \
            -X
